from sympy import (Eq, solve)
from symplyphysics import (units, Quantity, Symbol, print_expression,
                           validate_input, validate_output)

# Description
## For an ideal gas, the average square of velocity is directly proportional to its temperature and inversely proportional to the molar mass of the gas: <V^2> = 3 k T / m
## Where:
## <V^2> - average square of velocity
## T - temperature in gas
## m - mass of atom
## k - Boltzman's constant

temperature_in_gas = Symbol("temperature_in_gas", units.temperature)
mass_of_atom = Symbol("mass_of_atom", units.mass)

average_square_velocity = Symbol("rsm_velocity", units.velocity ** 2)

law = Eq(rsm_velocity, 3 * units.boltzmann_constant * temperature_in_gas / mass_of_atom)


def print_law() -> str:
    return print_expression(law)


@validate_input(temperature_in_gas_=temperature_in_gas,
                atom_mass_=mass_of_atom)
@validate_output(rsm_velocity)
def calculate_rsm_velocity(temperature_in_gas_: Quantity,
                           atom_mass_: Quantity) -> Quantity:
    result_rsm_velocity = solve(law, rsm_velocity, dict=True)[0][rsm_velocity]
    result_expr = result_rsm_velocity.subs({
        temperature_in_gas: temperature_in_gas_,
        mass_of_atom: atom_mass_
    })
    return Quantity(result_expr)
